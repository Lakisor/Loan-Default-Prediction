2025-05-26 22:39:52,326 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:39:52,326 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:39:52,327 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:39:52,327 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:39:52,426 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:39:52,431 - __main__ - ERROR - Произошла ошибка: not enough values to unpack (expected 4, got 2)
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 289, in main
    results = trainer.train_and_evaluate()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 228, in train_and_evaluate
    X_train, X_test, y_train, y_test = self.load_data()
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: not enough values to unpack (expected 4, got 2)
2025-05-26 22:40:23,486 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:40:23,487 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:40:23,487 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:40:23,487 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:40:23,580 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:40:23,601 - __main__ - INFO - Разделение данных выполнено. Признаки: 36, train samples: 204277, test samples: 51070
2025-05-26 22:40:24,019 - __main__ - ERROR - Произошла ошибка: could not convert string to float: 'high'
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 299, in main
    results = trainer.train_and_evaluate()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 252, in train_and_evaluate
    model.fit(X_train, y_train)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 1152, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1208, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 622, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 1146, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 915, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\_array_api.py", line 380, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\pandas\core\generic.py", line 2153, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'high'
2025-05-26 22:40:57,878 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:40:57,879 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:40:57,880 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:40:57,880 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:40:57,969 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:40:57,989 - __main__ - INFO - Распределение классов в обучающей выборке: 
{0: 0.8837216132995883, 1: 0.1162783867004117}
2025-05-26 22:40:57,989 - __main__ - INFO - Разделение данных выполнено. Признаки: 36, train samples: 204277, test samples: 51070
2025-05-26 22:40:58,362 - __main__ - ERROR - Произошла ошибка: could not convert string to float: 'high'
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 302, in main
    results = trainer.train_and_evaluate()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 255, in train_and_evaluate
    model.fit(X_train, y_train)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 1152, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1208, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 622, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 1146, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 915, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\_array_api.py", line 380, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\pandas\core\generic.py", line 2153, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'high'
2025-05-26 22:44:46,986 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:44:46,988 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:44:46,988 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:44:46,988 - __main__ - INFO - Загрузка данных...
2025-05-26 22:44:46,988 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:44:47,072 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:44:47,093 - __main__ - INFO - Распределение классов в обучающей выборке: 
{0: 0.8837216132995883, 1: 0.1162783867004117}
2025-05-26 22:44:47,093 - __main__ - INFO - Разделение данных выполнено. Признаки: 36, train samples: 204277, test samples: 51070
2025-05-26 22:44:47,097 - __main__ - INFO - Инициализация моделей...
2025-05-26 22:44:47,097 - __main__ - INFO - 
==================================================
2025-05-26 22:44:47,097 - __main__ - INFO - Обучение модели: LogisticRegression
2025-05-26 22:44:47,097 - __main__ - INFO - ==================================================
2025-05-26 22:44:47,097 - __main__ - INFO - Обучение модели...
2025-05-26 22:44:47,434 - __main__ - ERROR - Ошибка при обучении модели LogisticRegression: could not convert string to float: 'high'
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 259, in train_and_evaluate
    model.fit(X_train, y_train)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 1152, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\linear_model\_logistic.py", line 1208, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 622, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 1146, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 915, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\_array_api.py", line 380, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\pandas\core\generic.py", line 2153, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'high'
2025-05-26 22:44:47,512 - __main__ - INFO - 
==================================================
2025-05-26 22:44:47,513 - __main__ - INFO - Обучение модели: RandomForest
2025-05-26 22:44:47,513 - __main__ - INFO - ==================================================
2025-05-26 22:44:47,513 - __main__ - INFO - Обучение модели...
2025-05-26 22:44:47,868 - __main__ - ERROR - Ошибка при обучении модели RandomForest: could not convert string to float: 'high'
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 259, in train_and_evaluate
    model.fit(X_train, y_train)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 1152, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\ensemble\_forest.py", line 348, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\base.py", line 622, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 1146, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\validation.py", line 915, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\sklearn\utils\_array_api.py", line 380, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\pandas\core\generic.py", line 2153, in __array__
    arr = np.asarray(values, dtype=dtype)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'high'
2025-05-26 22:44:47,950 - __main__ - INFO - 
==================================================
2025-05-26 22:44:47,951 - __main__ - INFO - Обучение модели: XGBoost
2025-05-26 22:44:47,951 - __main__ - INFO - ==================================================
2025-05-26 22:44:47,951 - __main__ - INFO - Обучение модели...
2025-05-26 22:44:48,459 - __main__ - ERROR - Ошибка при обучении модели XGBoost: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:DTI_Group: object, CreditScore_Group: object
Traceback (most recent call last):
  File "C:\Files\Programming\LoanDefaultPrediction\train_model.py", line 259, in train_and_evaluate
    model.fit(X_train, y_train)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 726, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\sklearn.py", line 1512, in fit
    train_dmatrix, evals = _wrap_evaluation_matrices(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\sklearn.py", line 596, in _wrap_evaluation_matrices
    train_dmatrix = create_dmatrix(
                    ^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\sklearn.py", line 1003, in _create_dmatrix
    return QuantileDMatrix(
           ^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 726, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 1573, in __init__
    self._init(
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 1632, in _init
    it.reraise()
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 569, in reraise
    raise exc  # pylint: disable=raising-bad-type
    ^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 550, in _handle_exception
    return fn()
           ^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 637, in <lambda>
    return self._handle_exception(lambda: self.next(input_data), 0)
                                          ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\data.py", line 1416, in next
    input_data(**self.kwargs)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 726, in inner_f
    return func(**kwargs)
           ^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\core.py", line 617, in input_data
    new, cat_codes, feature_names, feature_types = _proxy_transform(
                                                   ^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\data.py", line 1459, in _proxy_transform
    df, feature_names, feature_types = _transform_pandas_df(
                                       ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\data.py", line 603, in _transform_pandas_df
    pandas_check_dtypes(data, enable_categorical)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\data.py", line 569, in pandas_check_dtypes
    _invalid_dataframe_dtype(data)
  File "C:\Files\Apps\Python3.12\Lib\site-packages\xgboost\data.py", line 356, in _invalid_dataframe_dtype
    raise ValueError(msg)
ValueError: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:DTI_Group: object, CreditScore_Group: object
2025-05-26 22:44:48,644 - __main__ - INFO - Обучение и оценка моделей завершены
2025-05-26 22:44:48,644 - __main__ - INFO - Обучение и оценка моделей завершены успешно!
2025-05-26 22:46:14,540 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:46:14,540 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:46:14,540 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:46:14,541 - __main__ - INFO - Загрузка данных...
2025-05-26 22:46:14,541 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:46:14,625 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:46:14,648 - __main__ - INFO - Распределение классов в обучающей выборке: 
{0: 0.8837216132995883, 1: 0.1162783867004117}
2025-05-26 22:46:14,648 - __main__ - INFO - Предобработка данных...
2025-05-26 22:46:14,863 - __main__ - INFO - Разделение данных выполнено. Признаки: 41, train samples: 204277, test samples: 51070
2025-05-26 22:46:14,868 - __main__ - INFO - Инициализация моделей...
2025-05-26 22:46:14,869 - __main__ - INFO - 
==================================================
2025-05-26 22:46:14,869 - __main__ - INFO - Обучение модели: LogisticRegression
2025-05-26 22:46:14,870 - __main__ - INFO - ==================================================
2025-05-26 22:46:14,870 - __main__ - INFO - Обучение модели...
2025-05-26 22:46:18,502 - __main__ - INFO - Обучение завершено успешно
2025-05-26 22:46:18,503 - __main__ - INFO - Проведение кросс-валидации...
2025-05-26 22:46:24,854 - __main__ - INFO - Оценка на тестовом наборе...
2025-05-26 22:46:26,121 - __main__ - INFO - Модель сохранена в models\LogisticRegression.joblib
2025-05-26 22:46:26,121 - __main__ - INFO - 
Результаты кросс-валидации:
2025-05-26 22:46:26,121 - __main__ - INFO - train_accuracy: 0.6848
2025-05-26 22:46:26,121 - __main__ - INFO - val_accuracy: 0.6846
2025-05-26 22:46:26,122 - __main__ - INFO - train_precision: 0.2233
2025-05-26 22:46:26,122 - __main__ - INFO - val_precision: 0.2229
2025-05-26 22:46:26,122 - __main__ - INFO - train_recall: 0.6902
2025-05-26 22:46:26,122 - __main__ - INFO - val_recall: 0.6885
2025-05-26 22:46:26,122 - __main__ - INFO - train_f1: 0.3375
2025-05-26 22:46:26,122 - __main__ - INFO - val_f1: 0.3367
2025-05-26 22:46:26,123 - __main__ - INFO - train_roc_auc: 0.7543
2025-05-26 22:46:26,123 - __main__ - INFO - val_roc_auc: 0.7537
2025-05-26 22:46:26,123 - __main__ - INFO - train_average_precision: 0.3235
2025-05-26 22:46:26,123 - __main__ - INFO - val_average_precision: 0.3229
2025-05-26 22:46:26,124 - __main__ - INFO - 
Результаты на тестовом наборе:
2025-05-26 22:46:26,124 - __main__ - INFO - accuracy: 0.6880
2025-05-26 22:46:26,124 - __main__ - INFO - precision: 0.2248
2025-05-26 22:46:26,124 - __main__ - INFO - recall: 0.6947
2025-05-26 22:46:26,124 - __main__ - INFO - f1: 0.3397
2025-05-26 22:46:26,124 - __main__ - INFO - roc_auc: 0.7602
2025-05-26 22:46:26,124 - __main__ - INFO - average_precision: 0.3354
2025-05-26 22:46:26,125 - __main__ - INFO - 
==================================================
2025-05-26 22:46:26,125 - __main__ - INFO - Обучение модели: RandomForest
2025-05-26 22:46:26,125 - __main__ - INFO - ==================================================
2025-05-26 22:46:26,125 - __main__ - INFO - Обучение модели...
2025-05-26 22:46:42,861 - __main__ - INFO - Обучение завершено успешно
2025-05-26 22:46:42,861 - __main__ - INFO - Проведение кросс-валидации...
2025-05-26 22:47:23,094 - __main__ - INFO - Начало работы скрипта обучения моделей
2025-05-26 22:47:23,095 - __main__ - INFO - Инициализация ModelTrainer...
2025-05-26 22:47:23,095 - __main__ - INFO - Запуск обучения и оценки моделей...
2025-05-26 22:47:23,096 - __main__ - INFO - Загрузка данных...
2025-05-26 22:47:23,096 - __main__ - INFO - Загрузка обработанных данных...
2025-05-26 22:47:23,190 - __main__ - INFO - Загружены данные. Размеры: train=(204277, 37), test=(51070, 37)
2025-05-26 22:47:23,215 - __main__ - INFO - Распределение классов в обучающей выборке: 
{0: 0.8837216132995883, 1: 0.1162783867004117}
2025-05-26 22:47:23,215 - __main__ - INFO - Предобработка данных...
2025-05-26 22:47:23,216 - __main__ - INFO - Начало предобработки данных. fit=True
2025-05-26 22:47:23,216 - __main__ - INFO - Исходные колонки: ['Age', 'Income', 'LoanAmount', 'CreditScore', 'MonthsEmployed', 'NumCreditLines', 'InterestRate', 'LoanTerm', 'DTIRatio', "Education_Bachelor's", 'Education_High School', "Education_Master's", 'Education_PhD', 'EmploymentType_Full-time', 'EmploymentType_Part-time', 'EmploymentType_Self-employed', 'EmploymentType_Unemployed', 'MaritalStatus_Divorced', 'MaritalStatus_Married', 'MaritalStatus_Single', 'HasMortgage_No', 'HasMortgage_Yes', 'HasDependents_No', 'HasDependents_Yes', 'LoanPurpose_Auto', 'LoanPurpose_Business', 'LoanPurpose_Education', 'LoanPurpose_Home', 'LoanPurpose_Other', 'HasCoSigner_No', 'HasCoSigner_Yes', 'DTI_Group', 'LoanToIncomeRatio', 'CreditScore_Group', 'EmploymentStability', 'MonthlyPayment']
2025-05-26 22:47:23,216 - __main__ - INFO - Категориальные колонки: ['DTI_Group', 'CreditScore_Group']
2025-05-26 22:47:23,229 - __main__ - INFO - Применение OneHotEncoder к колонкам: ['DTI_Group', 'CreditScore_Group']
2025-05-26 22:47:23,303 - __main__ - INFO - Колонка DTI_Group имеет категории: ['high' 'low' 'medium']
2025-05-26 22:47:23,304 - __main__ - INFO - Колонка CreditScore_Group имеет категории: ['excellent' 'fair' 'good' 'poor']
2025-05-26 22:47:23,304 - __main__ - INFO - Создано 7 новых бинарных признаков
2025-05-26 22:47:23,340 - __main__ - INFO - Преобразование всех признаков в числовой формат...
2025-05-26 22:47:23,356 - __main__ - INFO - Преобразование в числовой формат успешно завершено
2025-05-26 22:47:23,357 - __main__ - INFO - Предобработка завершена. Итоговые размеры: (204277, 41)
2025-05-26 22:47:23,357 - __main__ - INFO - Итоговые колонки: ['Age', 'Income', 'LoanAmount', 'CreditScore', 'MonthsEmployed', 'NumCreditLines', 'InterestRate', 'LoanTerm', 'DTIRatio', "Education_Bachelor's", 'Education_High School', "Education_Master's", 'Education_PhD', 'EmploymentType_Full-time', 'EmploymentType_Part-time', 'EmploymentType_Self-employed', 'EmploymentType_Unemployed', 'MaritalStatus_Divorced', 'MaritalStatus_Married', 'MaritalStatus_Single', 'HasMortgage_No', 'HasMortgage_Yes', 'HasDependents_No', 'HasDependents_Yes', 'LoanPurpose_Auto', 'LoanPurpose_Business', 'LoanPurpose_Education', 'LoanPurpose_Home', 'LoanPurpose_Other', 'HasCoSigner_No', 'HasCoSigner_Yes', 'LoanToIncomeRatio', 'EmploymentStability', 'MonthlyPayment', 'DTI_Group_high', 'DTI_Group_low', 'DTI_Group_medium', 'CreditScore_Group_excellent', 'CreditScore_Group_fair', 'CreditScore_Group_good', 'CreditScore_Group_poor']
2025-05-26 22:47:23,361 - __main__ - INFO - Начало предобработки данных. fit=False
2025-05-26 22:47:23,362 - __main__ - INFO - Исходные колонки: ['Age', 'Income', 'LoanAmount', 'CreditScore', 'MonthsEmployed', 'NumCreditLines', 'InterestRate', 'LoanTerm', 'DTIRatio', "Education_Bachelor's", 'Education_High School', "Education_Master's", 'Education_PhD', 'EmploymentType_Full-time', 'EmploymentType_Part-time', 'EmploymentType_Self-employed', 'EmploymentType_Unemployed', 'MaritalStatus_Divorced', 'MaritalStatus_Married', 'MaritalStatus_Single', 'HasMortgage_No', 'HasMortgage_Yes', 'HasDependents_No', 'HasDependents_Yes', 'LoanPurpose_Auto', 'LoanPurpose_Business', 'LoanPurpose_Education', 'LoanPurpose_Home', 'LoanPurpose_Other', 'HasCoSigner_No', 'HasCoSigner_Yes', 'DTI_Group', 'LoanToIncomeRatio', 'CreditScore_Group', 'EmploymentStability', 'MonthlyPayment']
2025-05-26 22:47:23,362 - __main__ - INFO - Категориальные колонки: ['DTI_Group', 'CreditScore_Group']
2025-05-26 22:47:23,390 - __main__ - INFO - Преобразование всех признаков в числовой формат...
2025-05-26 22:47:23,395 - __main__ - INFO - Преобразование в числовой формат успешно завершено
2025-05-26 22:47:23,395 - __main__ - INFO - Предобработка завершена. Итоговые размеры: (51070, 41)
2025-05-26 22:47:23,395 - __main__ - INFO - Итоговые колонки: ['Age', 'Income', 'LoanAmount', 'CreditScore', 'MonthsEmployed', 'NumCreditLines', 'InterestRate', 'LoanTerm', 'DTIRatio', "Education_Bachelor's", 'Education_High School', "Education_Master's", 'Education_PhD', 'EmploymentType_Full-time', 'EmploymentType_Part-time', 'EmploymentType_Self-employed', 'EmploymentType_Unemployed', 'MaritalStatus_Divorced', 'MaritalStatus_Married', 'MaritalStatus_Single', 'HasMortgage_No', 'HasMortgage_Yes', 'HasDependents_No', 'HasDependents_Yes', 'LoanPurpose_Auto', 'LoanPurpose_Business', 'LoanPurpose_Education', 'LoanPurpose_Home', 'LoanPurpose_Other', 'HasCoSigner_No', 'HasCoSigner_Yes', 'LoanToIncomeRatio', 'EmploymentStability', 'MonthlyPayment', 'DTI_Group_high', 'DTI_Group_low', 'DTI_Group_medium', 'CreditScore_Group_excellent', 'CreditScore_Group_fair', 'CreditScore_Group_good', 'CreditScore_Group_poor']
2025-05-26 22:47:23,397 - __main__ - INFO - Разделение данных выполнено. Признаки: 41, train samples: 204277, test samples: 51070
2025-05-26 22:47:23,402 - __main__ - INFO - Инициализация моделей...
2025-05-26 22:47:23,402 - __main__ - INFO - 
==================================================
2025-05-26 22:47:23,402 - __main__ - INFO - Обучение модели: LogisticRegression
2025-05-26 22:47:23,403 - __main__ - INFO - ==================================================
2025-05-26 22:47:23,403 - __main__ - INFO - Обучение модели...
2025-05-26 22:47:27,315 - __main__ - INFO - Обучение завершено успешно
2025-05-26 22:47:27,316 - __main__ - INFO - Проведение кросс-валидации...
2025-05-26 22:47:33,054 - __main__ - INFO - Оценка на тестовом наборе...
2025-05-26 22:47:33,829 - __main__ - INFO - Модель сохранена в models\LogisticRegression.joblib
2025-05-26 22:47:33,829 - __main__ - INFO - 
Результаты кросс-валидации:
2025-05-26 22:47:33,829 - __main__ - INFO - train_accuracy: 0.6848
2025-05-26 22:47:33,830 - __main__ - INFO - val_accuracy: 0.6846
2025-05-26 22:47:33,830 - __main__ - INFO - train_precision: 0.2233
2025-05-26 22:47:33,830 - __main__ - INFO - val_precision: 0.2229
2025-05-26 22:47:33,830 - __main__ - INFO - train_recall: 0.6902
2025-05-26 22:47:33,830 - __main__ - INFO - val_recall: 0.6885
2025-05-26 22:47:33,831 - __main__ - INFO - train_f1: 0.3375
2025-05-26 22:47:33,831 - __main__ - INFO - val_f1: 0.3367
2025-05-26 22:47:33,831 - __main__ - INFO - train_roc_auc: 0.7543
2025-05-26 22:47:33,831 - __main__ - INFO - val_roc_auc: 0.7537
2025-05-26 22:47:33,831 - __main__ - INFO - train_average_precision: 0.3235
2025-05-26 22:47:33,831 - __main__ - INFO - val_average_precision: 0.3229
2025-05-26 22:47:33,831 - __main__ - INFO - 
Результаты на тестовом наборе:
2025-05-26 22:47:33,832 - __main__ - INFO - accuracy: 0.6880
2025-05-26 22:47:33,832 - __main__ - INFO - precision: 0.2248
2025-05-26 22:47:33,832 - __main__ - INFO - recall: 0.6947
2025-05-26 22:47:33,832 - __main__ - INFO - f1: 0.3397
2025-05-26 22:47:33,832 - __main__ - INFO - roc_auc: 0.7602
2025-05-26 22:47:33,832 - __main__ - INFO - average_precision: 0.3354
2025-05-26 22:47:33,833 - __main__ - INFO - 
==================================================
2025-05-26 22:47:33,833 - __main__ - INFO - Обучение модели: RandomForest
2025-05-26 22:47:33,833 - __main__ - INFO - ==================================================
2025-05-26 22:47:33,833 - __main__ - INFO - Обучение модели...
2025-05-26 22:47:49,078 - __main__ - INFO - Обучение завершено успешно
2025-05-26 22:47:49,078 - __main__ - INFO - Проведение кросс-валидации...
2025-05-26 22:49:02,457 - __main__ - INFO - Оценка на тестовом наборе...
2025-05-26 22:49:03,597 - __main__ - INFO - Модель сохранена в models\RandomForest.joblib
2025-05-26 22:49:03,598 - __main__ - INFO - 
Результаты кросс-валидации:
2025-05-26 22:49:03,598 - __main__ - INFO - train_accuracy: 0.7613
2025-05-26 22:49:03,598 - __main__ - INFO - val_accuracy: 0.7395
2025-05-26 22:49:03,598 - __main__ - INFO - train_precision: 0.2850
2025-05-26 22:49:03,598 - __main__ - INFO - val_precision: 0.2456
2025-05-26 22:49:03,599 - __main__ - INFO - train_recall: 0.6978
2025-05-26 22:49:03,599 - __main__ - INFO - val_recall: 0.5987
2025-05-26 22:49:03,599 - __main__ - INFO - train_f1: 0.4047
2025-05-26 22:49:03,599 - __main__ - INFO - val_f1: 0.3483
2025-05-26 22:49:03,600 - __main__ - INFO - train_roc_auc: 0.8174
2025-05-26 22:49:03,600 - __main__ - INFO - val_roc_auc: 0.7471
2025-05-26 22:49:03,600 - __main__ - INFO - train_average_precision: 0.4324
2025-05-26 22:49:03,600 - __main__ - INFO - val_average_precision: 0.3103
2025-05-26 22:49:03,600 - __main__ - INFO - 
Результаты на тестовом наборе:
2025-05-26 22:49:03,601 - __main__ - INFO - accuracy: 0.7354
2025-05-26 22:49:03,601 - __main__ - INFO - precision: 0.2451
2025-05-26 22:49:03,601 - __main__ - INFO - recall: 0.6205
2025-05-26 22:49:03,601 - __main__ - INFO - f1: 0.3514
2025-05-26 22:49:03,601 - __main__ - INFO - roc_auc: 0.7518
2025-05-26 22:49:03,601 - __main__ - INFO - average_precision: 0.3208
2025-05-26 22:49:03,601 - __main__ - INFO - 
==================================================
2025-05-26 22:49:03,602 - __main__ - INFO - Обучение модели: XGBoost
2025-05-26 22:49:03,602 - __main__ - INFO - ==================================================
2025-05-26 22:49:03,602 - __main__ - INFO - Обучение модели...
2025-05-26 22:49:06,423 - __main__ - INFO - Обучение завершено успешно
2025-05-26 22:49:06,424 - __main__ - INFO - Проведение кросс-валидации...
2025-05-26 22:49:18,298 - __main__ - INFO - Оценка на тестовом наборе...
2025-05-26 22:49:19,137 - __main__ - INFO - Модель сохранена в models\XGBoost.joblib
2025-05-26 22:49:19,137 - __main__ - INFO - 
Результаты кросс-валидации:
2025-05-26 22:49:19,138 - __main__ - INFO - train_accuracy: 0.8931
2025-05-26 22:49:19,138 - __main__ - INFO - val_accuracy: 0.8858
2025-05-26 22:49:19,139 - __main__ - INFO - train_precision: 0.7879
2025-05-26 22:49:19,139 - __main__ - INFO - val_precision: 0.5698
2025-05-26 22:49:19,139 - __main__ - INFO - train_recall: 0.1107
2025-05-26 22:49:19,139 - __main__ - INFO - val_recall: 0.0743
2025-05-26 22:49:19,139 - __main__ - INFO - train_f1: 0.1941
2025-05-26 22:49:19,139 - __main__ - INFO - val_f1: 0.1314
2025-05-26 22:49:19,140 - __main__ - INFO - train_roc_auc: 0.8289
2025-05-26 22:49:19,140 - __main__ - INFO - val_roc_auc: 0.7461
2025-05-26 22:49:19,140 - __main__ - INFO - train_average_precision: 0.4598
2025-05-26 22:49:19,140 - __main__ - INFO - val_average_precision: 0.3123
2025-05-26 22:49:19,140 - __main__ - INFO - 
Результаты на тестовом наборе:
2025-05-26 22:49:19,140 - __main__ - INFO - accuracy: 0.8876
2025-05-26 22:49:19,141 - __main__ - INFO - precision: 0.6055
2025-05-26 22:49:19,141 - __main__ - INFO - recall: 0.0778
2025-05-26 22:49:19,141 - __main__ - INFO - f1: 0.1379
2025-05-26 22:49:19,141 - __main__ - INFO - roc_auc: 0.7540
2025-05-26 22:49:19,141 - __main__ - INFO - average_precision: 0.3235
2025-05-26 22:49:19,143 - __main__ - INFO - Обучение и оценка моделей завершены
2025-05-26 22:49:19,155 - __main__ - INFO - Обучение и оценка моделей завершены успешно!
